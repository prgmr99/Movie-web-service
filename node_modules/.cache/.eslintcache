[{"/Users/yeomseungjun/Desktop/space/React/react_funny/src/index.js":"1","/Users/yeomseungjun/Desktop/space/React/react_funny/src/App.js":"2","/Users/yeomseungjun/Desktop/space/React/react_funny/src/components/Movie.js":"3","/Users/yeomseungjun/Desktop/space/React/react_funny/src/components/Loading.js":"4","/Users/yeomseungjun/Desktop/space/React/react_funny/src/components/Nav.js":"5","/Users/yeomseungjun/Desktop/space/React/react_funny/src/components/Slide.js":"6","/Users/yeomseungjun/Desktop/space/React/react_funny/src/atom/NavList.js":"7","/Users/yeomseungjun/Desktop/space/React/react_funny/src/atom/Atoms.js":"8","/Users/yeomseungjun/Desktop/space/React/react_funny/src/routes/Home.js":"9","/Users/yeomseungjun/Desktop/space/React/react_funny/src/routes/Detail.js":"10","/Users/yeomseungjun/Desktop/space/React/react_funny/src/routes/List.js":"11","/Users/yeomseungjun/Desktop/space/React/react_funny/src/components/Point.js":"12"},{"size":454,"mtime":1672834629319,"results":"13","hashOfConfig":"14"},{"size":1332,"mtime":1672834681515,"results":"15","hashOfConfig":"14"},{"size":1373,"mtime":1672834505852,"results":"16","hashOfConfig":"14"},{"size":202,"mtime":1672807808691,"results":"17","hashOfConfig":"14"},{"size":2821,"mtime":1672833570371,"results":"18","hashOfConfig":"14"},{"size":1474,"mtime":1672833432156,"results":"19","hashOfConfig":"14"},{"size":278,"mtime":1672832215920,"results":"20","hashOfConfig":"14"},{"size":406,"mtime":1672832194992,"results":"21","hashOfConfig":"14"},{"size":3657,"mtime":1672834053008,"results":"22","hashOfConfig":"14"},{"size":2756,"mtime":1672836598920,"results":"23","hashOfConfig":"14"},{"size":2053,"mtime":1672832031446,"results":"24","hashOfConfig":"14"},{"size":1212,"mtime":1672836631088,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"10ha4f8",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"29"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":2,"source":"44","usedDeprecatedRules":"29"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"29"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"29"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"29"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},"/Users/yeomseungjun/Desktop/space/React/react_funny/src/index.js",[],[],[],"/Users/yeomseungjun/Desktop/space/React/react_funny/src/App.js",["69","70","71","72"],[],"import React from 'react'\nimport {\n    BrowserRouter as Router,\n    Routes,   // Route를 찾는 것, route은 localhost:3000\"/movies/123\"에서 \"\"에 있는 URL을 의미한다. Route을 찾으면 컴포넌트를 render을 한다.\n    Route,\n} from \"react-router-dom\";\nimport Home from \"./routes/Home\";\nimport Detail from \"./routes/Detail\";\n\n/*function App() {\n    return (\n    <Router basename={process.env.PUBLIC_URL}>\n        <Routes>\n            <Route path=\"/movie/:id\" element={<Detail />}></Route>\n        </Routes>\n        <Routes> \n            <Route path=\"/\" element={<Home />}>\n            </Route>\n        </Routes>\n    </Router>);\n}*/\nimport List from \"./routes/List\";\nimport Nav from \"./components/Nav\"\nimport {\n    RecoilRoot,\n    atom,\n    selector,\n    useRecoilState,\n    useRecoilValue,\n} from 'recoil';\n  \nfunction App() {\n    return (\n      <RecoilRoot >\n        <Router>\n          <Nav />\n          <Routes>\n            <Route path=\"/page/:detail/:num\" element={<List />} />\n            <Route path=\"/movie/:id\" element={<Detail />} />\n            <Route path={process.env.PUBLIC_URL + \"/\"} element={<Home />} />\n          </Routes>\n        </Router>\n      </RecoilRoot>\n    )\n}\n\nexport default App;\n\n// :id 가 아닌 id로 작성하면 \"/movie/id\" 이렇게 입력을 해야 이동한다. 그래서 : 추가","/Users/yeomseungjun/Desktop/space/React/react_funny/src/components/Movie.js",["73"],[],"import PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"./Movie.module.css\";\n\n// creating Movie component with props\nfunction Movie({id, coverImg, title, year, summary, genres, rating, movie_style}) {\n    if(coverImg == \"\") {\n        return null;\n    }\n    return (\n        <div className={styles.movie} style={movie_style}>\n            <img src={coverImg} alt={title} className={styles.movie__img}/>\n            <div>\n                <h2 className={styles.movie__title}>\n                    <Link to={`/movie/${id}`}>{title && title.length > 50 ? `${title.slice(0,50)}...` : title}</Link>\n                </h2>\n                <h3 className={styles.movie__year}>{year}</h3>\n                <h4>Rating: {rating}/10</h4>\n                <ul className={styles.movie__genres}>\n                    {genres.map(g => <li key={g}>{g}</li>)}\n                </ul>\n                <p className={styles.movie__summary}>{summary && summary.length > 235 ? `${summary.slice(0, 235)}...` : summary}</p>\n            </div>\n        </div>\n    );\n}\n\nMovie.propTypes = {\n    id: PropTypes.number.isRequired, \n    coverImg: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    summary: PropTypes.string,\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired,\n    year: PropTypes.number.isRequired,\n    \n}\nexport default Movie;","/Users/yeomseungjun/Desktop/space/React/react_funny/src/components/Loading.js",[],[],"/Users/yeomseungjun/Desktop/space/React/react_funny/src/components/Nav.js",["74","75","76","77"],[],"import { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\"\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from \"recoil\";\nimport {listPageReLoading, focusNav} from \"../atom/Atoms\";\nimport styles from \"./Nav.module.css\";\nimport navList from \"../atom/NavList\";\n\nfunction Nav() {\n    let last_known_scroll_position = 0;\n    let ticking = false;\n    const [changing, setChanging] = useState(false);\n    const [scrolling, setScrolling] = useState(false);\n\n    const pageReLoading = useSetRecoilState(listPageReLoading);\n    const [focusPath, setFocusPath] = useRecoilState(focusNav);\n\n    const doSomething = (scroll_pos) => {\n        if (scroll_pos >= 10) {\n            setChanging(true);\n            setScrolling(true);\n        } else {\n            setChanging(false);\n            setScrolling(false);\n        }\n    }\n\n    window.addEventListener('scroll', function(e) {\n    last_known_scroll_position = window.scrollY;\n\n    if (!ticking) {\n        window.requestAnimationFrame(function() {\n        doSomething(last_known_scroll_position);\n        ticking = false;\n        });\n        ticking = true;\n    }\n    });\n\n    const onMouseOverOut = () => {\n        if (scrolling)\n            return;      \n        setChanging(current => !current);\n    }    \n    const optionOnClick = () => {\n        pageReLoading(true);\n    }\n    return <div>\n        <nav onMouseOver={onMouseOverOut} onMouseOut={onMouseOverOut} style={changing ? \n            {backgroundColor : \"#845EC2\",\n            boxShadow: \"rgba(50, 50, 93, 0.25) 0px 13px 27px -5px,rgba(0, 0, 0, 0.3) 0px 8px 16px -8px\"}\n             : {backgroundColor : \"transparent\"}} className={styles.container} >\n        <div className={styles.title}>\n            <Link to=\"/react-movie\" onClick={() => setFocusPath(\"\")}>\n                <i className=\"fab fa-neos\"></i>\n                <strong>ETFLEX</strong>\n            </Link>\n        </div>\n        <ul className={styles.option__list}>\n            {navList.map(({title, path}) => {\n                return (\n                    <li key={title}>\n                        <Link to={`/page/${path}/1`} \n                            onClick={focusPath !== path ? optionOnClick : null} \n                            style={focusPath !== path ? null : {\n                            color: \"#dcb0ff\",\n                        }}>{title}</Link>\n                    </li>\n                )\n            })}\n        </ul>\n        <ul className={styles.icon__list}>\n            <li><a href=\"https://twitter.com/?lang=ko\" target=\"_blank\"><i className=\"fab fa-twitter-square\"></i></a></li>\n            <li><a href=\"https://www.instagram.com/\" target=\"_blank\"><i className=\"fab fa-instagram\"></i></a></li>\n        </ul>\n    </nav>\n    <div className={styles.null}></div>\n    </div>\n    \n}\n\nexport default Nav;","/Users/yeomseungjun/Desktop/space/React/react_funny/src/components/Slide.js",["78"],[],"import { useState, useEffect } from \"react\";\nimport styles from \"./Slide.module.css\";\nimport Movie from \"./Movie\";\n\nfunction Slide({ movieContents }) {\n  const [trans, setTrans] = useState(0);\n\n    const onClickL = () => {\n      if (trans >= 0) {\n        return;\n      }\n      setTrans(current => current + 350);\n    }\n    const onClickR = () => {\n      if (trans <= -2450) {\n        return;\n      }\n      setTrans(current => current - 350);\n    }\n\n    return (\n        <div className={styles.container}>\n          <div className={styles.slide__show}>\n            <div className={styles.slide} style={{\n                transform: `translateX(${trans}px)`\n            }}>\n            {movieContents.map((movie) => (\n              <Movie\n                key={movie.id}\n                id={movie.id}\n                year={movie.year}\n                coverImg={movie.medium_cover_image}\n                title={movie.title}\n                genres={movie.genres}\n                movie_style={{\n                  minWidth: \"350px\",\n                  height: \"300px\",\n                }}\n              />\n            ))}\n            </div>\n          </div>\n          <div>\n            <button className={styles.left} onClick={onClickL}><i className=\"fas fa-caret-square-left\"></i></button>\n            <button className={styles.right} onClick={onClickR}><i className=\"fas fa-caret-square-right\"></i></button>          \n          </div>  \n        </div>\n    )\n}\n\nexport default Slide;","/Users/yeomseungjun/Desktop/space/React/react_funny/src/atom/NavList.js",[],[],"/Users/yeomseungjun/Desktop/space/React/react_funny/src/atom/Atoms.js",[],[],"/Users/yeomseungjun/Desktop/space/React/react_funny/src/routes/Home.js",["79"],[],"import { useState, useEffect} from 'react';\nimport {Link} from \"react-router-dom\";\nimport Loading from \"../components/Loading\";\nimport styles from \"./Home.module.css\";\nimport Slide from \"../components/Slide\";\nimport navList from \"../atom/NavList\";\nimport axios from \"axios\";\n\n/**\n * 홈 화면에 출력되는 형식들 다루는 함수\n * @returns 홈 화면에 출력하는 틀\n */\n/*function Home() {\n    const [loading, setLoading] = useState(true);\n    const [movies, setMovies] = useState([]);\n    // 요즘은 async-await을 then보다 많이 쓰기 때문에 바꿔보자.\n    const getMovies = async() => {\n        const response = await fetch(\n            `https://yts.mx/api/v2/list_movies.json?minimum_rating=8.8&sort_by=year`\n        );\n        const json = await response.json();     // 더 간단하게 줄일 수도 있다.\n        setMovies(json.data.movies);\n        setLoading(false);\n    }\n    useEffect(() => {\n        getMovies();\n    }, [])\n    //useEffect(() => {\n        //fetch(`https://yts.mx/api/v2/list_movies.json?minimum_rating=8.8&sort_by=year`)\n        //.then((response) => response.json())\n        //.then((json) => {\n            //setMovies(json.data.movies);\n            //setLoading(false);\n        //});\n    //}, []);\n    console.log(movies);\n    return (\n        <div>\n            {loading ? <Loading /> : \n                <div>\n                    {movies.map(movie => \n                        <Movie \n                            key={movie.id}   // key는 React.js에서만, map안에서 component들을 render할 때 사용\n                            id={movie.id}\n                            coverImg={movie.medium_cover_image}\n                            title={movie.title}\n                            summary={movie.summary}\n                            genres={movie.genres}\n                            year={movie.year}\n                            rating={movie.rating}/>\n                    )}\n                </div>\n            }\n        </div>\n    );\n}*/\nfunction Home() {\n    const [ movieContents, setMovieContents ] = useState([])\n    \n    useEffect(() => {\n      const request = navList.map(({ title, path }) => {\n        return axios.get('https://yts.mx/api/v2/list_movies.json?' + path, {\n          params: {\n            limit: 10,\n            sort_by: 'year',\n          }\n        })\n      })\n  \n      axios.all(request)\n        .then(axios.spread(async (...response) => {\n          const data = await response.map(res => {\n            if (res.status === 200) {\n              return res.data.data.movies\n            }\n          })\n          \n          console.log(data)\n          setMovieContents(data)\n        })) \n    }, [])\n  \n    return (\n        <div className={styles.container}>\n          {navList.map((slide, idx) => {\n            return (\n              <div className={styles.slide__box} key={idx}>\n                  <h3 className={styles.title}>\n                    <Link to={`/page/${slide.path}/1`} key={idx}>\n                      <i className=\"fas fa-external-link-alt\"></i>\n                      <span>{slide.title} Movie</span>\n                    </Link>\n                  </h3>\n                  { movieContents && movieContents.length === 0 ? (\n                      <Loading key={idx}/>\n                    ) : (\n                      <Slide movieContents={movieContents[idx]} key={idx}/>\n                    )\n                  }\n              </div>\n            )\n          })}\n        </div>\n    )\n}\n  \nexport default Home;\n\n// React Router은 다이내믹(동적) URL을 지원해주기도 한다.\n// 다이내믹의 의미는 URL에 변수를 넣을 수 있다는 의미다.","/Users/yeomseungjun/Desktop/space/React/react_funny/src/routes/Detail.js",["80"],[],"/Users/yeomseungjun/Desktop/space/React/react_funny/src/routes/List.js",["81","82"],[],"import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport Movie from \"../components/Movie\";\nimport Loading from \"../components/Loading\";\nimport styles from \"./List.module.css\";\nimport {Link} from \"react-router-dom\";\nimport { listPageReLoading, focusNav} from \"../atom/Atoms\";\nimport { useRecoilState, useSetRecoilState } from \"recoil\";\n\nconst listNums = [...Array(10)].map((_,i) => i + 1);\n\nfunction List() {\n  const { num, detail } = useParams();\n\n  const [loading, setLoading] = useState(true);\n  const [movies, setMovies] = useState([]);\n  const [reloading, setReloading] = useRecoilState(listPageReLoading);\n  const focusPage = useSetRecoilState(focusNav);\n\n  const getMovies = async () => {\n    const json = await (\n      await fetch(\n        `https://yts.mx/api/v2/list_movies.json?page=${num}&${detail}&sort_by=year`\n      )\n    ).json();\n    setMovies(json.data.movies);\n    setLoading(false);\n  };\n  useEffect(() => {\n    setReloading(false);\n    setLoading(true);\n    focusPage(detail);\n\n    getMovies();\n  }, [reloading]);\n  \n  return (\n    <div className={styles.container}>\n      {loading ? (\n        <Loading />\n      ) : (\n        <div className={styles.movies}>\n          {movies.map((movie) => (\n            <Movie\n              key={movie.id}\n              id={movie.id}\n              year={movie.year}\n              coverImg={movie.medium_cover_image}\n              title={movie.title}\n              summary={movie.summary}\n              genres={movie.genres}\n            />\n          ))}\n        </div>      \n      )}\n      <ul className={styles.footer}>\n        {loading ? null : listNums.map(listNum => {\n          return (\n            <li>\n              <Link \n                to={`/page/${detail}/${listNum}`} \n                onClick={() => setReloading(true)}\n                className={\n                  listNum == num ? styles.focusing : null\n                }>{listNum}</Link>\n            </li>\n          )\n        }\n        )}\n      </ul>\n        \n    </div>\n  );\n}\nexport default List;","/Users/yeomseungjun/Desktop/space/React/react_funny/src/components/Point.js",["83","84","85","86"],[],{"ruleId":"87","severity":1,"message":"88","line":26,"column":5,"nodeType":"89","messageId":"90","endLine":26,"endColumn":9},{"ruleId":"87","severity":1,"message":"91","line":27,"column":5,"nodeType":"89","messageId":"90","endLine":27,"endColumn":13},{"ruleId":"87","severity":1,"message":"92","line":28,"column":5,"nodeType":"89","messageId":"90","endLine":28,"endColumn":19},{"ruleId":"87","severity":1,"message":"93","line":29,"column":5,"nodeType":"89","messageId":"90","endLine":29,"endColumn":19},{"ruleId":"94","severity":1,"message":"95","line":7,"column":17,"nodeType":"96","messageId":"97","endLine":7,"endColumn":19},{"ruleId":"87","severity":1,"message":"98","line":1,"column":10,"nodeType":"89","messageId":"90","endLine":1,"endColumn":19},{"ruleId":"87","severity":1,"message":"93","line":3,"column":26,"nodeType":"89","messageId":"90","endLine":3,"endColumn":40},{"ruleId":"99","severity":1,"message":"100","line":72,"column":17,"nodeType":"101","messageId":"102","endLine":72,"endColumn":72,"fix":"103"},{"ruleId":"99","severity":1,"message":"100","line":73,"column":17,"nodeType":"101","messageId":"102","endLine":73,"endColumn":70,"fix":"104"},{"ruleId":"87","severity":1,"message":"98","line":1,"column":20,"nodeType":"89","messageId":"90","endLine":1,"endColumn":29},{"ruleId":"105","severity":1,"message":"106","line":72,"column":47,"nodeType":"107","messageId":"108","endLine":72,"endColumn":49},{"ruleId":"109","severity":1,"message":"110","line":21,"column":8,"nodeType":"111","endLine":21,"endColumn":10,"suggestions":"112"},{"ruleId":"109","severity":1,"message":"113","line":35,"column":6,"nodeType":"111","endLine":35,"endColumn":17,"suggestions":"114"},{"ruleId":"94","severity":1,"message":"95","line":64,"column":27,"nodeType":"96","messageId":"97","endLine":64,"endColumn":29},{"ruleId":"87","severity":1,"message":"115","line":1,"column":8,"nodeType":"89","messageId":"90","endLine":1,"endColumn":17},{"ruleId":"116","severity":1,"message":"117","line":8,"column":13,"nodeType":"101","endLine":8,"endColumn":75},{"ruleId":"116","severity":1,"message":"117","line":10,"column":17,"nodeType":"101","endLine":10,"endColumn":73},{"ruleId":"99","severity":1,"message":"100","line":12,"column":50,"nodeType":"101","messageId":"102","endLine":12,"endColumn":80,"fix":"118"},"no-unused-vars","'atom' is defined but never used.","Identifier","unusedVar","'selector' is defined but never used.","'useRecoilState' is defined but never used.","'useRecoilValue' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"119","text":"120"},{"range":"121","text":"120"},"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMovie'. Either include it or remove the dependency array.","ArrayExpression",["122"],"React Hook useEffect has missing dependencies: 'detail', 'focusPage', 'getMovies', and 'setReloading'. Either include them or remove the dependency array.",["123"],"'PropTypes' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",{"range":"124","text":"120"},[2551,2551]," rel=\"noreferrer\"",[2671,2671],{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},[580,580],"Update the dependencies array to be: [getMovie]",{"range":"129","text":"130"},"Update the dependencies array to be: [detail, focusPage, getMovies, reloading, setReloading]",{"range":"131","text":"132"},[692,694],"[getMovie]",[1056,1067],"[detail, focusPage, getMovies, reloading, setReloading]"]