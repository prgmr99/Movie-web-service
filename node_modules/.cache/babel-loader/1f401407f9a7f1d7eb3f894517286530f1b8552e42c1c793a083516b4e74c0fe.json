{"ast":null,"code":"import _regeneratorRuntime from\"/Users/yeomseungjun/Desktop/space/React/react_funny/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/yeomseungjun/Desktop/space/React/react_funny/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/yeomseungjun/Desktop/space/React/react_funny/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect}from'react';import{Link}from\"react-router-dom\";import Loading from\"../components/Loading\";import styles from\"./Home.module.css\";import Slide from\"../components/Slide\";import navList from\"../atom/NavList\";import axios from\"axios\";/**\n * 홈 화면에 출력되는 형식들 다루는 함수\n * @returns 홈 화면에 출력하는 틀\n */ /*function Home() {\n    const [loading, setLoading] = useState(true);\n    const [movies, setMovies] = useState([]);\n    // 요즘은 async-await을 then보다 많이 쓰기 때문에 바꿔보자.\n    const getMovies = async() => {\n        const response = await fetch(\n            `https://yts.mx/api/v2/list_movies.json?minimum_rating=8.8&sort_by=year`\n        );\n        const json = await response.json();     // 더 간단하게 줄일 수도 있다.\n        setMovies(json.data.movies);\n        setLoading(false);\n    }\n    useEffect(() => {\n        getMovies();\n    }, [])\n    //useEffect(() => {\n        //fetch(`https://yts.mx/api/v2/list_movies.json?minimum_rating=8.8&sort_by=year`)\n        //.then((response) => response.json())\n        //.then((json) => {\n            //setMovies(json.data.movies);\n            //setLoading(false);\n        //});\n    //}, []);\n    console.log(movies);\n    return (\n        <div>\n            {loading ? <Loading /> : \n                <div>\n                    {movies.map(movie => \n                        <Movie \n                            key={movie.id}   // key는 React.js에서만, map안에서 component들을 render할 때 사용\n                            id={movie.id}\n                            coverImg={movie.medium_cover_image}\n                            title={movie.title}\n                            summary={movie.summary}\n                            genres={movie.genres}\n                            year={movie.year}\n                            rating={movie.rating}/>\n                    )}\n                </div>\n            }\n        </div>\n    );\n}*/import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Home(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),movieContents=_useState2[0],setMovieContents=_useState2[1];useEffect(function(){var request=navList.map(function(_ref){var title=_ref.title,path=_ref.path;return axios.get('https://yts.mx/api/v2/list_movies.json?'+path,{params:{limit:10,sort_by:'year'}});});axios.all(request).then(axios.spread(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var _len,response,_key,data,_args=arguments;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:for(_len=_args.length,response=new Array(_len),_key=0;_key<_len;_key++){response[_key]=_args[_key];}_context.next=3;return response.map(function(res){if(res.status===200){return res.data.data.movies;}});case 3:data=_context.sent;console.log(data);setMovieContents(data);case 6:case\"end\":return _context.stop();}},_callee);}))));},[]);return/*#__PURE__*/_jsx(\"div\",{className:styles.container,children:navList.map(function(slide,idx){return/*#__PURE__*/_jsxs(\"div\",{className:styles.slide__box,children:[/*#__PURE__*/_jsx(\"h3\",{className:styles.title,children:/*#__PURE__*/_jsxs(Link,{to:\"/page/\".concat(slide.path,\"/1\"),children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-external-link-alt\"}),/*#__PURE__*/_jsxs(\"span\",{children:[slide.title,\" Movie\"]})]},idx)}),movieContents&&movieContents.length===0?/*#__PURE__*/_jsx(Loading,{},idx):/*#__PURE__*/_jsx(Slide,{movieContents:movieContents[idx]},idx)]},idx);})});}export default Home;// React Router은 다이내믹(동적) URL을 지원해주기도 한다.\n// 다이내믹의 의미는 URL에 변수를 넣을 수 있다는 의미다.","map":{"version":3,"names":["useState","useEffect","Link","Loading","styles","Slide","navList","axios","Home","movieContents","setMovieContents","request","map","title","path","get","params","limit","sort_by","all","then","spread","response","res","status","data","movies","console","log","container","slide","idx","slide__box","length"],"sources":["/Users/yeomseungjun/Desktop/space/React/react_funny/src/routes/Home.js"],"sourcesContent":["import { useState, useEffect} from 'react';\nimport {Link} from \"react-router-dom\";\nimport Loading from \"../components/Loading\";\nimport styles from \"./Home.module.css\";\nimport Slide from \"../components/Slide\";\nimport navList from \"../atom/NavList\";\nimport axios from \"axios\";\n\n/**\n * 홈 화면에 출력되는 형식들 다루는 함수\n * @returns 홈 화면에 출력하는 틀\n */\n/*function Home() {\n    const [loading, setLoading] = useState(true);\n    const [movies, setMovies] = useState([]);\n    // 요즘은 async-await을 then보다 많이 쓰기 때문에 바꿔보자.\n    const getMovies = async() => {\n        const response = await fetch(\n            `https://yts.mx/api/v2/list_movies.json?minimum_rating=8.8&sort_by=year`\n        );\n        const json = await response.json();     // 더 간단하게 줄일 수도 있다.\n        setMovies(json.data.movies);\n        setLoading(false);\n    }\n    useEffect(() => {\n        getMovies();\n    }, [])\n    //useEffect(() => {\n        //fetch(`https://yts.mx/api/v2/list_movies.json?minimum_rating=8.8&sort_by=year`)\n        //.then((response) => response.json())\n        //.then((json) => {\n            //setMovies(json.data.movies);\n            //setLoading(false);\n        //});\n    //}, []);\n    console.log(movies);\n    return (\n        <div>\n            {loading ? <Loading /> : \n                <div>\n                    {movies.map(movie => \n                        <Movie \n                            key={movie.id}   // key는 React.js에서만, map안에서 component들을 render할 때 사용\n                            id={movie.id}\n                            coverImg={movie.medium_cover_image}\n                            title={movie.title}\n                            summary={movie.summary}\n                            genres={movie.genres}\n                            year={movie.year}\n                            rating={movie.rating}/>\n                    )}\n                </div>\n            }\n        </div>\n    );\n}*/\nfunction Home() {\n    const [ movieContents, setMovieContents ] = useState([])\n    \n    useEffect(() => {\n      const request = navList.map(({ title, path }) => {\n        return axios.get('https://yts.mx/api/v2/list_movies.json?' + path, {\n          params: {\n            limit: 10,\n            sort_by: 'year',\n          }\n        })\n      })\n  \n      axios.all(request)\n        .then(axios.spread(async (...response) => {\n          const data = await response.map(res => {\n            if (res.status === 200) {\n              return res.data.data.movies\n            }\n          })\n          \n          console.log(data)\n          setMovieContents(data)\n        })) \n    }, [])\n  \n    return (\n        <div className={styles.container}>\n          {navList.map((slide, idx) => {\n            return (\n              <div className={styles.slide__box} key={idx}>\n                  <h3 className={styles.title}>\n                    <Link to={`/page/${slide.path}/1`} key={idx}>\n                      <i className=\"fas fa-external-link-alt\"></i>\n                      <span>{slide.title} Movie</span>\n                    </Link>\n                  </h3>\n                  { movieContents && movieContents.length === 0 ? (\n                      <Loading key={idx}/>\n                    ) : (\n                      <Slide movieContents={movieContents[idx]} key={idx}/>\n                    )\n                  }\n              </div>\n            )\n          })}\n        </div>\n    )\n}\n  \nexport default Home;\n\n// React Router은 다이내믹(동적) URL을 지원해주기도 한다.\n// 다이내믹의 의미는 URL에 변수를 넣을 수 있다는 의미다."],"mappings":"2aAAA,OAASA,QAAQ,CAAEC,SAAS,KAAO,OAAO,CAC1C,OAAQC,IAAI,KAAO,kBAAkB,CACrC,MAAOC,QAAO,KAAM,uBAAuB,CAC3C,MAAOC,OAAM,KAAM,mBAAmB,CACtC,MAAOC,MAAK,KAAM,qBAAqB,CACvC,MAAOC,QAAO,KAAM,iBAAiB,CACrC,MAAOC,MAAK,KAAM,OAAO,CAEzB;AACA;AACA;AACA,GAHA,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GA3CA,wFA4CA,QAASC,KAAI,EAAG,CACZ,cAA4CR,QAAQ,CAAC,EAAE,CAAC,wCAAhDS,aAAa,eAAEC,gBAAgB,eAEvCT,SAAS,CAAC,UAAM,CACd,GAAMU,QAAO,CAAGL,OAAO,CAACM,GAAG,CAAC,cAAqB,IAAlBC,MAAK,MAALA,KAAK,CAAEC,IAAI,MAAJA,IAAI,CACxC,MAAOP,MAAK,CAACQ,GAAG,CAAC,yCAAyC,CAAGD,IAAI,CAAE,CACjEE,MAAM,CAAE,CACNC,KAAK,CAAE,EAAE,CACTC,OAAO,CAAE,MACX,CACF,CAAC,CAAC,CACJ,CAAC,CAAC,CAEFX,KAAK,CAACY,GAAG,CAACR,OAAO,CAAC,CACfS,IAAI,CAACb,KAAK,CAACc,MAAM,wEAAC,sMAAUC,QAAQ,0CAARA,QAAQ,0CAChBA,SAAQ,CAACV,GAAG,CAAC,SAAAW,GAAG,CAAI,CACrC,GAAIA,GAAG,CAACC,MAAM,GAAK,GAAG,CAAE,CACtB,MAAOD,IAAG,CAACE,IAAI,CAACA,IAAI,CAACC,MAAM,CAC7B,CACF,CAAC,CAAC,QAJID,IAAI,eAMVE,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC,CACjBf,gBAAgB,CAACe,IAAI,CAAC,sDACvB,GAAC,CAAC,CACP,CAAC,CAAE,EAAE,CAAC,CAEN,mBACI,YAAK,SAAS,CAAErB,MAAM,CAACyB,SAAU,UAC9BvB,OAAO,CAACM,GAAG,CAAC,SAACkB,KAAK,CAAEC,GAAG,CAAK,CAC3B,mBACE,aAAK,SAAS,CAAE3B,MAAM,CAAC4B,UAAW,wBAC9B,WAAI,SAAS,CAAE5B,MAAM,CAACS,KAAM,uBAC1B,MAAC,IAAI,EAAC,EAAE,iBAAWiB,KAAK,CAAChB,IAAI,MAAK,wBAChC,UAAG,SAAS,CAAC,0BAA0B,EAAK,cAC5C,wBAAOgB,KAAK,CAACjB,KAAK,CAAC,QAAM,GAAO,GAFMkB,GAAG,CAGpC,EACJ,CACHtB,aAAa,EAAIA,aAAa,CAACwB,MAAM,GAAK,CAAC,cACzC,KAAC,OAAO,IAAMF,GAAG,CAAG,cAEpB,KAAC,KAAK,EAAC,aAAa,CAAEtB,aAAa,CAACsB,GAAG,CAAE,EAAMA,GAAG,CACnD,GAXiCA,GAAG,CAarC,CAEV,CAAC,CAAC,EACE,CAEd,CAEA,cAAevB,KAAI,CAEnB;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}