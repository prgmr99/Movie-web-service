{"ast":null,"code":"import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nfunction App() {\n  /*const [loading, setLoading] = useState(true);\n  const [movies, setMovies] = useState([]);\n  // 요즘은 async-await을 then보다 많이 쓰기 때문에 바꿔보자.\n  const getMovies = async() => {\n      const response = await fetch(\n          `https://yts.mx/api/v2/list_movies.json?minimum_rating=8.8&sort_by=year`\n      );\n      const json = await response.json();     // 더 간단하게 줄일 수도 있다.\n      setMovies(json.data.movies);\n      setLoading(false);\n  }\n  useEffect(() => {\n      getMovies();\n  }, [])\n  /*useEffect(() => {\n      fetch(`https://yts.mx/api/v2/list_movies.json?minimum_rating=8.8&sort_by=year`)\n      .then((response) => response.json())\n      .then((json) => {\n          setMovies(json.data.movies);\n          setLoading(false);\n      });\n  }, []);*/\n  /*console.log(movies);\n  return (\n      <div>\n          {loading ? <h1>Loading...</h1> : \n              <div>\n                  {movies.map(movie => \n                      <Movie \n                          key={movie.id}   // key는 React.js에서만, map안에서 component들을 render할 때 사용\n                          coverImg={movie.medium_cover_image}\n                          title={movie.title}\n                          summary={movie.summary}\n                          genres={movie.genres}/>\n                  )}\n              </div>\n          }\n      </div>\n  );*/\n  return null;\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Router","Switch","Route","App"],"sources":["/Users/yeomseungjun/Desktop/space/React/react_funny/src/App.js"],"sourcesContent":["import {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n} from \"react-router-dom\"\n\nfunction App() {\n    /*const [loading, setLoading] = useState(true);\n    const [movies, setMovies] = useState([]);\n    // 요즘은 async-await을 then보다 많이 쓰기 때문에 바꿔보자.\n    const getMovies = async() => {\n        const response = await fetch(\n            `https://yts.mx/api/v2/list_movies.json?minimum_rating=8.8&sort_by=year`\n        );\n        const json = await response.json();     // 더 간단하게 줄일 수도 있다.\n        setMovies(json.data.movies);\n        setLoading(false);\n    }\n    useEffect(() => {\n        getMovies();\n    }, [])\n    /*useEffect(() => {\n        fetch(`https://yts.mx/api/v2/list_movies.json?minimum_rating=8.8&sort_by=year`)\n        .then((response) => response.json())\n        .then((json) => {\n            setMovies(json.data.movies);\n            setLoading(false);\n        });\n    }, []);*/\n    /*console.log(movies);\n    return (\n        <div>\n            {loading ? <h1>Loading...</h1> : \n                <div>\n                    {movies.map(movie => \n                        <Movie \n                            key={movie.id}   // key는 React.js에서만, map안에서 component들을 render할 때 사용\n                            coverImg={movie.medium_cover_image}\n                            title={movie.title}\n                            summary={movie.summary}\n                            genres={movie.genres}/>\n                    )}\n                </div>\n            }\n        </div>\n    );*/\n    return null;\n}\n\nexport default App;"],"mappings":"AAAA,SACIA,aAAa,IAAIC,MAAM,EACvBC,MAAM,EACNC,KAAK,QACF,kBAAkB;AAEzB,SAASC,GAAG,GAAG;EACX;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,OAAO,IAAI;AACf;AAAC,KAzCQA,GAAG;AA2CZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}