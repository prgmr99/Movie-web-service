{"ast":null,"code":"var _jsxFileName = \"/Users/yeomseungjun/Desktop/space/React/react_funny/src/routes/Home.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport Loading from \"../components/Loading\";\nimport styles from \"./Home.module.css\";\nimport Slide from \"../components/Slide\";\nimport navList from \"../atom/NavList\";\nimport axios from \"axios\";\n\n/**\n * 홈 화면에 출력되는 형식들 다루는 함수\n * @returns 홈 화면에 출력하는 틀\n */\n/*function Home() {\n    const [loading, setLoading] = useState(true);\n    const [movies, setMovies] = useState([]);\n    // 요즘은 async-await을 then보다 많이 쓰기 때문에 바꿔보자.\n    const getMovies = async() => {\n        const response = await fetch(\n            `https://yts.mx/api/v2/list_movies.json?minimum_rating=8.8&sort_by=year`\n        );\n        const json = await response.json();     // 더 간단하게 줄일 수도 있다.\n        setMovies(json.data.movies);\n        setLoading(false);\n    }\n    useEffect(() => {\n        getMovies();\n    }, [])\n    //useEffect(() => {\n        //fetch(`https://yts.mx/api/v2/list_movies.json?minimum_rating=8.8&sort_by=year`)\n        //.then((response) => response.json())\n        //.then((json) => {\n            //setMovies(json.data.movies);\n            //setLoading(false);\n        //});\n    //}, []);\n    console.log(movies);\n    return (\n        <div>\n            {loading ? <Loading /> : \n                <div>\n                    {movies.map(movie => \n                        <Movie \n                            key={movie.id}   // key는 React.js에서만, map안에서 component들을 render할 때 사용\n                            id={movie.id}\n                            coverImg={movie.medium_cover_image}\n                            title={movie.title}\n                            summary={movie.summary}\n                            genres={movie.genres}\n                            year={movie.year}\n                            rating={movie.rating}/>\n                    )}\n                </div>\n            }\n        </div>\n    );\n}*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [movieContents, setMovieContents] = useState([]);\n  useEffect(() => {\n    const request = navList.map(_ref => {\n      let {\n        title,\n        path\n      } = _ref;\n      return axios.get('https://yts.mx/api/v2/list_movies.json?' + path, {\n        params: {\n          limit: 10,\n          sort_by: 'year'\n        }\n      });\n    });\n    axios.all(request).then(axios.spread(async function () {\n      for (var _len = arguments.length, response = new Array(_len), _key = 0; _key < _len; _key++) {\n        response[_key] = arguments[_key];\n      }\n      const data = await response.map(res => {\n        if (res.status === 200) {\n          return res.data.data.movies;\n        }\n      });\n      console.log(data);\n      setMovieContents(data);\n    }));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: navList.map((slide, idx) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.slide__box,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: styles.title,\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/page/${slide.path}/1`,\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-external-link-alt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [slide.title, \" Movie\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 23\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 19\n        }, this), movieContents && movieContents.length === 0 ? /*#__PURE__*/_jsxDEV(Loading, {}, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 23\n        }, this) : /*#__PURE__*/_jsxDEV(Slide, {\n          movieContents: movieContents[idx]\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 23\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n}\n_s(Home, \"D8Wpe6u5eRzlkNCXA+Nc73EJkcc=\");\n_c = Home;\nexport default Home;\n\n// React Router은 다이내믹(동적) URL을 지원해주기도 한다.\n// 다이내믹의 의미는 URL에 변수를 넣을 수 있다는 의미다.\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useState","useEffect","Link","Loading","styles","Slide","navList","axios","Home","movieContents","setMovieContents","request","map","title","path","get","params","limit","sort_by","all","then","spread","response","data","res","status","movies","console","log","container","slide","idx","slide__box","length"],"sources":["/Users/yeomseungjun/Desktop/space/React/react_funny/src/routes/Home.js"],"sourcesContent":["import { useState, useEffect} from 'react';\nimport {Link} from \"react-router-dom\";\nimport Loading from \"../components/Loading\";\nimport styles from \"./Home.module.css\";\nimport Slide from \"../components/Slide\";\nimport navList from \"../atom/NavList\";\nimport axios from \"axios\";\n\n/**\n * 홈 화면에 출력되는 형식들 다루는 함수\n * @returns 홈 화면에 출력하는 틀\n */\n/*function Home() {\n    const [loading, setLoading] = useState(true);\n    const [movies, setMovies] = useState([]);\n    // 요즘은 async-await을 then보다 많이 쓰기 때문에 바꿔보자.\n    const getMovies = async() => {\n        const response = await fetch(\n            `https://yts.mx/api/v2/list_movies.json?minimum_rating=8.8&sort_by=year`\n        );\n        const json = await response.json();     // 더 간단하게 줄일 수도 있다.\n        setMovies(json.data.movies);\n        setLoading(false);\n    }\n    useEffect(() => {\n        getMovies();\n    }, [])\n    //useEffect(() => {\n        //fetch(`https://yts.mx/api/v2/list_movies.json?minimum_rating=8.8&sort_by=year`)\n        //.then((response) => response.json())\n        //.then((json) => {\n            //setMovies(json.data.movies);\n            //setLoading(false);\n        //});\n    //}, []);\n    console.log(movies);\n    return (\n        <div>\n            {loading ? <Loading /> : \n                <div>\n                    {movies.map(movie => \n                        <Movie \n                            key={movie.id}   // key는 React.js에서만, map안에서 component들을 render할 때 사용\n                            id={movie.id}\n                            coverImg={movie.medium_cover_image}\n                            title={movie.title}\n                            summary={movie.summary}\n                            genres={movie.genres}\n                            year={movie.year}\n                            rating={movie.rating}/>\n                    )}\n                </div>\n            }\n        </div>\n    );\n}*/\nfunction Home() {\n    const [ movieContents, setMovieContents ] = useState([])\n    \n    useEffect(() => {\n      const request = navList.map(({ title, path }) => {\n        return axios.get('https://yts.mx/api/v2/list_movies.json?' + path, {\n          params: {\n            limit: 10,\n            sort_by: 'year',\n          }\n        })\n      })\n  \n      axios.all(request)\n        .then(axios.spread(async (...response) => {\n          const data = await response.map(res => {\n            if (res.status === 200) {\n              return res.data.data.movies\n            }\n          })\n          \n          console.log(data)\n          setMovieContents(data)\n        })) \n    }, [])\n  \n    return (\n        <div className={styles.container}>\n          {navList.map((slide, idx) => {\n            return (\n              <div className={styles.slide__box} key={idx}>\n                  <h3 className={styles.title}>\n                    <Link to={`/page/${slide.path}/1`} key={idx}>\n                      <i className=\"fas fa-external-link-alt\"></i>\n                      <span>{slide.title} Movie</span>\n                    </Link>\n                  </h3>\n                  { movieContents && movieContents.length === 0 ? (\n                      <Loading key={idx}/>\n                    ) : (\n                      <Slide movieContents={movieContents[idx]} key={idx}/>\n                    )\n                  }\n              </div>\n            )\n          })}\n          \n        </div>\n    )\n}\n  \nexport default Home;\n\n// React Router은 다이내믹(동적) URL을 지원해주기도 한다.\n// 다이내믹의 의미는 URL에 변수를 넣을 수 있다는 의미다."],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}