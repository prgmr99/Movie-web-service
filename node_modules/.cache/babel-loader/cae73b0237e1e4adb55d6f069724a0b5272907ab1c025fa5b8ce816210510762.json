{"ast":null,"code":"import _regeneratorRuntime from\"/Users/yeomseungjun/Desktop/space/React/react_funny/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/yeomseungjun/Desktop/space/React/react_funny/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/yeomseungjun/Desktop/space/React/react_funny/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect}from'react';import Movie from'../components/Movie';import{jsx as _jsx}from\"react/jsx-runtime\";function Home(){var _useState=useState(true),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),movies=_useState4[0],setMovies=_useState4[1];// 요즘은 async-await을 then보다 많이 쓰기 때문에 바꿔보자.\nvar getMovies=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response,json;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"https://yts.mx/api/v2/list_movies.json?minimum_rating=8.8&sort_by=year\");case 2:response=_context.sent;_context.next=5;return response.json();case 5:json=_context.sent;// 더 간단하게 줄일 수도 있다.\nsetMovies(json.data.movies);setLoading(false);case 8:case\"end\":return _context.stop();}},_callee);}));return function getMovies(){return _ref.apply(this,arguments);};}();useEffect(function(){getMovies();},[]);/*useEffect(() => {\n        fetch(`https://yts.mx/api/v2/list_movies.json?minimum_rating=8.8&sort_by=year`)\n        .then((response) => response.json())\n        .then((json) => {\n            setMovies(json.data.movies);\n            setLoading(false);\n        });\n    }, []);*/console.log(movies);return/*#__PURE__*/_jsx(\"div\",{children:loading?/*#__PURE__*/_jsx(\"h1\",{children:\"Loading...\"}):/*#__PURE__*/_jsx(\"div\",{children:movies.map(function(movie){return/*#__PURE__*/_jsx(Movie,{// key는 React.js에서만, map안에서 component들을 render할 때 사용\nid:movie.id,coverImg:movie.medium_cover_image,title:movie.title,summary:movie.summary,genres:movie.genres,year:movie.year},movie.id);})})});}export default Home;// React Router은 다이내믹(동적) URL을 지원해주기도 한다.\n// 다이내믹의 의미는 URL에 변수를 넣을 수 있다는 의미다.","map":{"version":3,"names":["useState","useEffect","Movie","Home","loading","setLoading","movies","setMovies","getMovies","fetch","response","json","data","console","log","map","movie","id","medium_cover_image","title","summary","genres","year"],"sources":["/Users/yeomseungjun/Desktop/space/React/react_funny/src/routes/Home.js"],"sourcesContent":["import { useState, useEffect} from 'react';\nimport Movie from '../components/Movie';\n\nfunction Home() {\n    const [loading, setLoading] = useState(true);\n    const [movies, setMovies] = useState([]);\n    // 요즘은 async-await을 then보다 많이 쓰기 때문에 바꿔보자.\n    const getMovies = async() => {\n        const response = await fetch(\n            `https://yts.mx/api/v2/list_movies.json?minimum_rating=8.8&sort_by=year`\n        );\n        const json = await response.json();     // 더 간단하게 줄일 수도 있다.\n        setMovies(json.data.movies);\n        setLoading(false);\n    }\n    useEffect(() => {\n        getMovies();\n    }, [])\n    /*useEffect(() => {\n        fetch(`https://yts.mx/api/v2/list_movies.json?minimum_rating=8.8&sort_by=year`)\n        .then((response) => response.json())\n        .then((json) => {\n            setMovies(json.data.movies);\n            setLoading(false);\n        });\n    }, []);*/\n    console.log(movies);\n    return (\n        <div>\n            {loading ? <h1>Loading...</h1> : \n                <div>\n                    {movies.map(movie => \n                        <Movie \n                            key={movie.id}   // key는 React.js에서만, map안에서 component들을 render할 때 사용\n                            id={movie.id}\n                            coverImg={movie.medium_cover_image}\n                            title={movie.title}\n                            summary={movie.summary}\n                            genres={movie.genres}\n                            year={movie.year}/>\n                    )}\n                </div>\n            }\n        </div>\n    );\n}\n\nexport default Home;\n\n// React Router은 다이내믹(동적) URL을 지원해주기도 한다.\n// 다이내믹의 의미는 URL에 변수를 넣을 수 있다는 의미다."],"mappings":"2aAAA,OAASA,QAAQ,CAAEC,SAAS,KAAO,OAAO,CAC1C,MAAOC,MAAK,KAAM,qBAAqB,CAAC,2CAExC,QAASC,KAAI,EAAG,CACZ,cAA8BH,QAAQ,CAAC,IAAI,CAAC,wCAArCI,OAAO,eAAEC,UAAU,eAC1B,eAA4BL,QAAQ,CAAC,EAAE,CAAC,yCAAjCM,MAAM,eAAEC,SAAS,eACxB;AACA,GAAMC,UAAS,4FAAG,4KACSC,MAAK,0EAE3B,QAFKC,QAAQ,qCAGKA,SAAQ,CAACC,IAAI,EAAE,QAA5BA,IAAI,eAA8B;AACxCJ,SAAS,CAACI,IAAI,CAACC,IAAI,CAACN,MAAM,CAAC,CAC3BD,UAAU,CAAC,KAAK,CAAC,CAAC,qDACrB,kBAPKG,UAAS,0CAOd,CACDP,SAAS,CAAC,UAAM,CACZO,SAAS,EAAE,CACf,CAAC,CAAE,EAAE,CAAC,CACN;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,aACIK,OAAO,CAACC,GAAG,CAACR,MAAM,CAAC,CACnB,mBACI,qBACKF,OAAO,cAAG,oBAAI,YAAU,EAAK,cAC1B,qBACKE,MAAM,CAACS,GAAG,CAAC,SAAAC,KAAK,qBACb,KAAC,KAAK,EACe;AACjB,EAAE,CAAEA,KAAK,CAACC,EAAG,CACb,QAAQ,CAAED,KAAK,CAACE,kBAAmB,CACnC,KAAK,CAAEF,KAAK,CAACG,KAAM,CACnB,OAAO,CAAEH,KAAK,CAACI,OAAQ,CACvB,MAAM,CAAEJ,KAAK,CAACK,MAAO,CACrB,IAAI,CAAEL,KAAK,CAACM,IAAK,EANZN,KAAK,CAACC,EAAE,CAMM,GAC1B,EACC,EAER,CAEd,CAEA,cAAed,KAAI,CAEnB;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}