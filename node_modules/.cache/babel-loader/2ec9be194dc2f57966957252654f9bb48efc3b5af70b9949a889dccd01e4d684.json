{"ast":null,"code":"var _jsxFileName = \"/Users/yeomseungjun/Desktop/space/React/react_funny/src/router/List.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport Movie from \"../components/Movie\";\nimport Loading from \"../components/Loading\";\nimport styles from \"./List.module.css\";\nimport { Link } from \"react-router-dom\";\nimport { listPageReLoading, focusNav } from \"../atom/Atoms\";\nimport { useRecoilState, useSetRecoilState } from \"recoil\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst listNums = [...Array(10)].map((_, i) => i + 1);\nfunction List() {\n  _s();\n  const {\n    num,\n    detail\n  } = useParams();\n  const [loading, setLoading] = useState(true);\n  const [movies, setMovies] = useState([]);\n  const [reloading, setReloading] = useRecoilState(listPageReLoading);\n  const focusPage = useSetRecoilState(focusNav);\n  const getMovies = async () => {\n    const json = await (await fetch(`https://yts.mx/api/v2/list_movies.json?page=${num}&${detail}&sort_by=year`)).json();\n    setMovies(json.data.movies);\n    setLoading(false);\n  };\n  useEffect(() => {\n    setReloading(false);\n    setLoading(true);\n    focusPage(detail);\n    getMovies();\n  }, [reloading]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.movies,\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(Movie, {\n        id: movie.id,\n        year: movie.year,\n        coverImg: movie.medium_cover_image,\n        title: movie.title,\n        summary: movie.summary,\n        genres: movie.genres\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.footer,\n      children: loading ? null : listNums.map(listNum => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/page/${detail}/${listNum}`,\n            onClick: () => setReloading(true),\n            className: listNum == num ? styles.focusing : null,\n            children: listNum\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(List, \"szr+nRPmimvEWKTZY5LWxEFUW18=\", false, function () {\n  return [useParams, useRecoilState, useSetRecoilState];\n});\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["useEffect","useState","useParams","Movie","Loading","styles","Link","listPageReLoading","focusNav","useRecoilState","useSetRecoilState","listNums","Array","map","_","i","List","num","detail","loading","setLoading","movies","setMovies","reloading","setReloading","focusPage","getMovies","json","fetch","data","container","movie","id","year","medium_cover_image","title","summary","genres","footer","listNum","focusing"],"sources":["/Users/yeomseungjun/Desktop/space/React/react_funny/src/router/List.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport Movie from \"../components/Movie\";\nimport Loading from \"../components/Loading\";\nimport styles from \"./List.module.css\";\nimport {Link} from \"react-router-dom\";\nimport { listPageReLoading, focusNav} from \"../atom/Atoms\";\nimport { useRecoilState, useSetRecoilState } from \"recoil\";\n\nconst listNums = [...Array(10)].map((_,i) => i + 1);\n\nfunction List() {\n  const { num, detail } = useParams();\n\n  const [loading, setLoading] = useState(true);\n  const [movies, setMovies] = useState([]);\n  const [reloading, setReloading] = useRecoilState(listPageReLoading);\n  const focusPage = useSetRecoilState(focusNav);\n\n  const getMovies = async () => {\n    const json = await (\n      await fetch(\n        `https://yts.mx/api/v2/list_movies.json?page=${num}&${detail}&sort_by=year`\n      )\n    ).json();\n    setMovies(json.data.movies);\n    setLoading(false);\n  };\n  useEffect(() => {\n    setReloading(false);\n    setLoading(true);\n    focusPage(detail);\n\n    getMovies();\n  }, [reloading]);\n  \n  return (\n    <div className={styles.container}>\n      {loading ? (\n        <Loading />\n      ) : (\n        <div className={styles.movies}>\n          {movies.map((movie) => (\n            <Movie\n              key={movie.id}\n              id={movie.id}\n              year={movie.year}\n              coverImg={movie.medium_cover_image}\n              title={movie.title}\n              summary={movie.summary}\n              genres={movie.genres}\n            />\n          ))}\n        </div>      \n      )}\n      <ul className={styles.footer}>\n        {loading ? null : listNums.map(listNum => {\n          return (\n            <li>\n              <Link \n                to={`/page/${detail}/${listNum}`} \n                onClick={() => setReloading(true)}\n                className={\n                  listNum == num ? styles.focusing : null\n                }>{listNum}</Link>\n            </li>\n          )\n        }\n        )}\n      </ul>\n        \n    </div>\n  );\n}\nexport default List;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}