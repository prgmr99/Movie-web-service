{"ast":null,"code":"var _jsxFileName = \"/Users/yeomseungjun/Desktop/space/React/react_funny/src/routes/Home.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport Movie from '../components/Movie';\nimport Loading from \"../components/Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [movies, setMovies] = useState([]);\n  // 요즘은 async-await을 then보다 많이 쓰기 때문에 바꿔보자.\n  const getMovies = async () => {\n    const response = await fetch(`https://yts.mx/api/v2/list_movies.json?minimum_rating=8.8&sort_by=year`);\n    const json = await response.json(); // 더 간단하게 줄일 수도 있다.\n    setMovies(json.data.movies);\n    setLoading(false);\n  };\n  useEffect(() => {\n    getMovies();\n  }, []);\n  /*useEffect(() => {\n      fetch(`https://yts.mx/api/v2/list_movies.json?minimum_rating=8.8&sort_by=year`)\n      .then((response) => response.json())\n      .then((json) => {\n          setMovies(json.data.movies);\n          setLoading(false);\n      });\n  }, []);*/\n  console.log(movies);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(Movie, {\n        // key는 React.js에서만, map안에서 component들을 render할 때 사용\n        id: movie.id,\n        coverImg: movie.medium_cover_image,\n        title: movie.title,\n        summary: movie.summary,\n        genres: movie.genres,\n        year: movie.year,\n        rating: movie.rating\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(Home, \"1CKmgsbuFjewbGnYkjmhEBs6qQ4=\");\n_c = Home;\nexport default Home;\n\n// React Router은 다이내믹(동적) URL을 지원해주기도 한다.\n// 다이내믹의 의미는 URL에 변수를 넣을 수 있다는 의미다.\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useState","useEffect","Movie","Loading","Home","loading","setLoading","movies","setMovies","getMovies","response","fetch","json","data","console","log","map","movie","id","medium_cover_image","title","summary","genres","year","rating"],"sources":["/Users/yeomseungjun/Desktop/space/React/react_funny/src/routes/Home.js"],"sourcesContent":["import { useState, useEffect} from 'react';\nimport Movie from '../components/Movie';\nimport Loading from \"../components/Loading\";\n\nfunction Home() {\n    const [loading, setLoading] = useState(true);\n    const [movies, setMovies] = useState([]);\n    // 요즘은 async-await을 then보다 많이 쓰기 때문에 바꿔보자.\n    const getMovies = async() => {\n        const response = await fetch(\n            `https://yts.mx/api/v2/list_movies.json?minimum_rating=8.8&sort_by=year`\n        );\n        const json = await response.json();     // 더 간단하게 줄일 수도 있다.\n        setMovies(json.data.movies);\n        setLoading(false);\n    }\n    useEffect(() => {\n        getMovies();\n    }, [])\n    /*useEffect(() => {\n        fetch(`https://yts.mx/api/v2/list_movies.json?minimum_rating=8.8&sort_by=year`)\n        .then((response) => response.json())\n        .then((json) => {\n            setMovies(json.data.movies);\n            setLoading(false);\n        });\n    }, []);*/\n    console.log(movies);\n    return (\n        <div>\n            {loading ? <h1>Loading...</h1> : \n                <div>\n                    {movies.map(movie => \n                        <Movie \n                            key={movie.id}   // key는 React.js에서만, map안에서 component들을 render할 때 사용\n                            id={movie.id}\n                            coverImg={movie.medium_cover_image}\n                            title={movie.title}\n                            summary={movie.summary}\n                            genres={movie.genres}\n                            year={movie.year}\n                            rating={movie.rating}/>\n                    )}\n                </div>\n            }\n        </div>\n    );\n}\n\nexport default Home;\n\n// React Router은 다이내믹(동적) URL을 지원해주기도 한다.\n// 다이내믹의 의미는 URL에 변수를 넣을 수 있다는 의미다."],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAC1C,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,OAAO,MAAM,uBAAuB;AAAC;AAE5C,SAASC,IAAI,GAAG;EAAA;EACZ,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC;EACA,MAAMS,SAAS,GAAG,YAAW;IACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACvB,wEAAuE,CAC3E;IACD,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAI,EAAE,CAAC,CAAK;IACxCJ,SAAS,CAACI,IAAI,CAACC,IAAI,CAACN,MAAM,CAAC;IAC3BD,UAAU,CAAC,KAAK,CAAC;EACrB,CAAC;EACDL,SAAS,CAAC,MAAM;IACZQ,SAAS,EAAE;EACf,CAAC,EAAE,EAAE,CAAC;EACN;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACIK,OAAO,CAACC,GAAG,CAACR,MAAM,CAAC;EACnB,oBACI;IAAA,UACKF,OAAO,gBAAG;MAAA,UAAI;IAAU;MAAA;MAAA;MAAA;IAAA,QAAK,gBAC1B;MAAA,UACKE,MAAM,CAACS,GAAG,CAACC,KAAK,iBACb,QAAC,KAAK;QACe;QACjB,EAAE,EAAEA,KAAK,CAACC,EAAG;QACb,QAAQ,EAAED,KAAK,CAACE,kBAAmB;QACnC,KAAK,EAAEF,KAAK,CAACG,KAAM;QACnB,OAAO,EAAEH,KAAK,CAACI,OAAQ;QACvB,MAAM,EAAEJ,KAAK,CAACK,MAAO;QACrB,IAAI,EAAEL,KAAK,CAACM,IAAK;QACjB,MAAM,EAAEN,KAAK,CAACO;MAAO,GAPhBP,KAAK,CAACC,EAAE;QAAA;QAAA;QAAA;MAAA,QAOU;IAC9B;MAAA;MAAA;MAAA;IAAA;EACC;IAAA;IAAA;IAAA;EAAA,QAER;AAEd;AAAC,GA3CQd,IAAI;AAAA,KAAJA,IAAI;AA6Cb,eAAeA,IAAI;;AAEnB;AACA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}