{"ast":null,"code":"var _jsxFileName = \"/Users/yeomseungjun/Desktop/space/React/react_funny/src/components/Movie.js\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"./Movie.module.css\";\n\n// creating Movie component with props\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Movie(_ref) {\n  let {\n    id,\n    coverImg,\n    title,\n    summary,\n    genres,\n    year,\n    rating\n  } = _ref;\n  if (coverImg == \"\") {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.movie,\n    style: movie_style,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: coverImg,\n      alt: title,\n      className: styles.movie__img\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `/movie/${id}`,\n        children: [title, \"(\", year, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Rating: \", rating, \"/10\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Genres\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: genres.map(g => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: g\n      }, g, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 34\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: summary.length > 235 ? `${summary.slice(0, 235)}...` : summary\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n}\n_c = Movie;\nMovie.propTypes = {\n  id: PropTypes.number.isRequired,\n  coverImg: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  summary: PropTypes.string.isRequired,\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired,\n  year: PropTypes.number.isRequired,\n  rating: PropTypes.number.isRequired\n};\nexport default Movie;\nvar _c;\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"names":["PropTypes","Link","styles","Movie","id","coverImg","title","summary","genres","year","rating","movie","movie_style","movie__img","map","g","length","slice","propTypes","number","isRequired","string","arrayOf"],"sources":["/Users/yeomseungjun/Desktop/space/React/react_funny/src/components/Movie.js"],"sourcesContent":["import PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"./Movie.module.css\";\n\n// creating Movie component with props\nfunction Movie({id, coverImg, title, summary, genres, year, rating}) {\n    if(coverImg == \"\") {\n        return null;\n    }\n    return (\n        <div className={styles.movie} style={movie_style}>\n            <img src={coverImg} alt={title} className={styles.movie__img}/>\n            <h2>\n                <Link to={`/movie/${id}`}>{title}({year})</Link>\n            </h2>\n            <h4>Rating: {rating}/10</h4>\n            <h4>Genres</h4>\n            <ul>\n                {genres.map(g => <li key={g}>{g}</li>)}\n            </ul>\n            <p>{summary.length > 235 ? `${summary.slice(0, 235)}...` : summary}</p>\n        </div>\n    );\n}\n\nMovie.propTypes = {\n    id: PropTypes.number.isRequired, \n    coverImg: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    summary: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired,\n    year: PropTypes.number.isRequired,\n    rating: PropTypes.number.isRequired,\n}\nexport default Movie;"],"mappings":";AAAA,OAAOA,SAAS,MAAM,YAAY;AAClC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,MAAM,MAAM,oBAAoB;;AAEvC;AAAA;AACA,SAASC,KAAK,OAAuD;EAAA,IAAtD;IAACC,EAAE;IAAEC,QAAQ;IAAEC,KAAK;IAAEC,OAAO;IAAEC,MAAM;IAAEC,IAAI;IAAEC;EAAM,CAAC;EAC/D,IAAGL,QAAQ,IAAI,EAAE,EAAE;IACf,OAAO,IAAI;EACf;EACA,oBACI;IAAK,SAAS,EAAEH,MAAM,CAACS,KAAM;IAAC,KAAK,EAAEC,WAAY;IAAA,wBAC7C;MAAK,GAAG,EAAEP,QAAS;MAAC,GAAG,EAAEC,KAAM;MAAC,SAAS,EAAEJ,MAAM,CAACW;IAAW;MAAA;MAAA;MAAA;IAAA,QAAE,eAC/D;MAAA,uBACI,QAAC,IAAI;QAAC,EAAE,EAAG,UAAST,EAAG,EAAE;QAAA,WAAEE,KAAK,EAAC,GAAC,EAACG,IAAI,EAAC,GAAC;MAAA;QAAA;QAAA;QAAA;MAAA;IAAO;MAAA;MAAA;MAAA;IAAA,QAC/C,eACL;MAAA,WAAI,UAAQ,EAACC,MAAM,EAAC,KAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK,eAC5B;MAAA,UAAI;IAAM;MAAA;MAAA;MAAA;IAAA,QAAK,eACf;MAAA,UACKF,MAAM,CAACM,GAAG,CAACC,CAAC,iBAAI;QAAA,UAAaA;MAAC,GAALA,CAAC;QAAA;QAAA;QAAA;MAAA,QAAU;IAAC;MAAA;MAAA;MAAA;IAAA,QACrC,eACL;MAAA,UAAIR,OAAO,CAACS,MAAM,GAAG,GAAG,GAAI,GAAET,OAAO,CAACU,KAAK,CAAC,CAAC,EAAE,GAAG,CAAE,KAAI,GAAGV;IAAO;MAAA;MAAA;MAAA;IAAA,QAAK;EAAA;IAAA;IAAA;IAAA;EAAA,QACrE;AAEd;AAAC,KAlBQJ,KAAK;AAoBdA,KAAK,CAACe,SAAS,GAAG;EACdd,EAAE,EAAEJ,SAAS,CAACmB,MAAM,CAACC,UAAU;EAC/Bf,QAAQ,EAAEL,SAAS,CAACqB,MAAM,CAACD,UAAU;EACrCd,KAAK,EAAEN,SAAS,CAACqB,MAAM,CAACD,UAAU;EAClCb,OAAO,EAAEP,SAAS,CAACqB,MAAM,CAACD,UAAU;EACpCZ,MAAM,EAAER,SAAS,CAACsB,OAAO,CAACtB,SAAS,CAACqB,MAAM,CAAC,CAACD,UAAU;EACtDX,IAAI,EAAET,SAAS,CAACmB,MAAM,CAACC,UAAU;EACjCV,MAAM,EAAEV,SAAS,CAACmB,MAAM,CAACC;AAC7B,CAAC;AACD,eAAejB,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}